---
title: "Untitled"
format: html
---


```{=html}

  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>Scrollama: Sticky Overlay Example</title>
    <meta name="description" content="Scrollama: Sticky Overlay Example" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" href="style.css" />
    <style>
      #scrolly {
        position: relative;
        background-color: #f3f3f3;
        padding: 1rem;
      }

      article {
        position: relative;
        padding: 0;
        max-width: 20rem;
        margin: 0 auto;
      }

      .sticky-thing {
        position: -webkit-sticky;
        position: sticky;
        left: 0;
        width: 100%;
        margin: 0;
        background-color: #8a8a8a;
        z-index: 0;
        top: 12.5vh;
        height: 75vh;
        /* Center everything inside */
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .sticky-thing p {
        font-size: 8rem;
        font-weight: 900;
        color: #fff;
      }

      .step {
        margin: 0 auto 2rem auto;
        color: #fff;
        background-color: rgba(0, 0, 0, 0.1);
      }

      .step:last-child {
        margin-bottom: 0;
      }

      .step.is-active p {
        background-color: goldenrod;
        color: #3b3b3b;
      }

      .step p {
        text-align: center;
        padding: 1rem;
        font-size: 1.5rem;
        background-color: #3b3b3b;
      }
    </style>
  </head>

  <body>
    <main>
      <nav>
        <a href="https://github.com/russellgoldenberg/scrollama">scrollama.js</a>
        <div class="nav__examples">
          <p>Examples:</p>
          <a href="basic.html">Basic</a>
          <a href="progress.html">Progress</a>
          <a href="sticky-side.html">Sticky Side</a>
          <a href="sticky-overlay.html">Sticky Overlay</a>
        </div>
      </nav>
      <section id="intro">
        <h1 class="intro__hed">Sticky Overlay Example</h1>
        <p class="intro__dek">
          Start scrolling to see how it works.
        </p>
      </section>

      <section id="scrolly">
        <div class="sticky-thing">
          <p>0</p>
        </div>

        <article>
          <div class="step" data-step="123">
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
          </div>
          <div class="step" data-step="223">
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
          </div>
          <div class="step" data-step="323">
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
          </div>
          <div class="step" data-step="423">
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
          </div>
        </article>
      </section>

      <section id="outro"></section>
    </main>

    <!-- <div class='debug'></div> -->
    <script src="https://unpkg.com/intersection-observer@0.5.1/intersection-observer.js"></script>
    <script src="https://unpkg.com/scrollama"></script>
    <script>
      var main = document.querySelector("main");
      var scrolly = main.querySelector("#scrolly");
      var sticky = scrolly.querySelector(".sticky-thing");
      var article = scrolly.querySelector("article");
      var steps = article.querySelectorAll(".step");

      // initialize the scrollama
      var scroller = scrollama();

      // scrollama event handlers
      function handleStepEnter(response) {
        // response = { element, direction, index }
        var el = response.element;
        console.log(el);

        // remove is-active from all steps
        // then add is-active to this step
        steps.forEach(step => step.classList.remove('is-active'));
        el.classList.add('is-active');

        // update graphic based on step
        sticky.querySelector("p").innerText = el.dataset.step;
      }

      function init() {
        // 2. setup the scroller passing options
        // 		this will also initialize trigger observations
        // 3. bind scrollama event handlers (this can be chained like below)
        scroller
          .setup({
            step: ".step",
            offset: 0.33,
            debug: true
          })
          .onStepEnter(handleStepEnter);

        // setup resize event
        window.addEventListener("resize", scroller.resize);
      }

      // kick things off
      init();
    </script>
  </body>

```
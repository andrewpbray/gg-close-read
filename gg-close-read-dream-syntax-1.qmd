---
format: 
  close-read-html:
    sticky-sidebar:
      sidebar-background: black
      body-background: white
execute: 
  echo: false
---

:::{.sticky-sidebar}

# A Grammar of Graphics

## A close read of a scatterplot

By Andrew Bray

What a lovely graphic this is,

with its three colors

and dots all over the place.

I wonder: how was this made? Let's walk through this step by step, starting with the data.

```{r}
#| echo: false
#| eval: true
#| warning: false
#| label: cr-plot1

ggplot(penguins, aes(x = bill_length_mm,
                     y = flipper_length_mm,
                     color = species)) +
  geom_point() +
  labs(x = "Bill Length",
       y = "Flipper Length",
       Species = "Species") +
  theme_bw()
```

### The Data {.step label="cr-tab1" transition="scrolloff-then-scrollon"}

At the foundation of any data visualization is the data itself. Here our data come from Dr. Kristen Gorman, who recorded measurements on 344 penguins near Palmer Station, Antarctica. The three variables at hand are the length of the bill (a numerical variable), the length of the flipper (a numerical variable), and the species of the bird (a categorical variable).

We can see that we have a bump in the road ahead! At least one of these rows has some missing values, as indicated by *NA*. [show highlight of NA row].

```{r}
#| echo: false
#| eval: true
#| warning: false
#| label: cr-tab1

select(penguins, species, bill_length_mm, flipper_length_mm)
```


### The Canvas {.step label="cr-plot2"}

You can lay down a blank sheet of paper by calling the `ggplot()` function in the `ggplot2` package in R. Right now, there's nothing to see here, just a blank canvas, waiting to be designed.

```{r}
#| echo: true
#| eval: true
#| warning: false
#| label: cr-plot2
#| transition: "fade

ggplot()
```

### Aesthetic mappings {.step label="cr-plot3" transition="fadeout-then-fadein"}

The first and most important decision in the design of a graphic is the *aesthetic mapping*. This is a dynamic link that ties the variability found in a column of your data frame to variability in an aesthetic attribute of the plot.

For a colored scatter plot, we use the following aesthetic mappings:\
- Map bill length to the x-axis\
- Map flipper length to the y-axis\
- Map the species to a color palette\

This plot still looks quite bare. Where is the data?

```{r}
#| echo: true
#| eval: true
#| warning: false
#| label: cr-plot3
#| cr-transition: "

ggplot(penguins, aes(x = bill_length_mm,
                     y = flipper_length_mm,
                     color = species))
```

### Geometry

The plot comes alive once we've assigned a **geometry**. The geometry describes the manner in which the observations show up in the graphic. In the *point* geometry, every observation is represented by a single circle. Now that our observation are plotted according to their aesthetic mapping, our plot is almost complete.

What's lacking is some polish. 

```{r}
#| echo: true
#| eval: true
#| warning: false

ggplot(penguins, aes(x = bill_length_mm,
                     y = flipper_length_mm,
                     color = species)) +
  geom_point()
```

### Theme

To polish up the look of our plot, we'll focus on two things. The most apparent is the *theme*, which encompasses several small design decisions: the color of the background, the number and color of guidelines, the font, etc. `ggplot2` defaults to a gray background but I prefer the more minimal look of the white background in the black-and-white theme.

The last piece to fix up was those labels. By default, the column names will show up. Those are written so that R can understand them: they lack spaces or punctuation. Here I've rewritten the labels to be ones that can be better understood by a human.

```{r}
#| echo: true
#| eval: true
#| warning: false

ggplot(penguins, aes(x = bill_length_mm,
                     y = flipper_length_mm,
                     color = species)) +
  geom_point() +
  labs(x = "Bill Length",
       y = "Flipper Length",
       Species = "Species") +
  theme_bw()
```

# El Fin

:::
